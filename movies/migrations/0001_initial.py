# Generated by Django 5.2.5 on 2025-08-06 11:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tmdb_id", models.IntegerField(unique=True)),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tmdb_id", models.IntegerField(unique=True)),
                ("title", models.CharField(max_length=255)),
                ("overview", models.TextField(blank=True)),
                ("release_date", models.DateField(blank=True, null=True)),
                ("poster_path", models.CharField(blank=True, max_length=255)),
                ("backdrop_path", models.CharField(blank=True, max_length=255)),
                (
                    "vote_average",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                ("vote_count", models.IntegerField(default=0)),
                ("popularity", models.FloatField(default=0.0)),
                ("adult", models.BooleanField(default=False)),
                ("original_language", models.CharField(blank=True, max_length=10)),
                ("original_title", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("genres", models.ManyToManyField(blank=True, to="movies.genre")),
            ],
            options={
                "ordering": ["-popularity", "-vote_average"],
            },
        ),
        migrations.CreateModel(
            name="FavoriteMovie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_movies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="movies.movie",
                    ),
                ),
            ],
            options={
                "ordering": ["-added_at"],
            },
        ),
        migrations.CreateModel(
            name="MovieRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.5),
                            django.core.validators.MaxValueValidator(5.0),
                        ]
                    ),
                ),
                ("review", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_ratings",
                        to="movies.movie",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movie_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RecommendationHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("trending", "Trending"),
                            ("popular", "Popular"),
                            ("genre_based", "Genre Based"),
                            ("collaborative", "Collaborative Filtering"),
                            ("content_based", "Content Based"),
                        ],
                        max_length=50,
                    ),
                ),
                ("score", models.FloatField(default=0.0)),
                ("clicked", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendation_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                (
                    "favorite_genres",
                    models.ManyToManyField(blank=True, to="movies.genre"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Watchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_watchlists",
                        to="movies.movie",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watchlist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-added_at"],
            },
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(
                fields=["tmdb_id"], name="movies_movi_tmdb_id_0e4cad_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(
                fields=["release_date"], name="movies_movi_release_b7ac7d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(
                fields=["vote_average"], name="movies_movi_vote_av_ca6eee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(
                fields=["popularity"], name="movies_movi_popular_114287_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="favoritemovie",
            unique_together={("user", "movie")},
        ),
        migrations.AlterUniqueTogether(
            name="movierating",
            unique_together={("user", "movie")},
        ),
        migrations.AddIndex(
            model_name="recommendationhistory",
            index=models.Index(
                fields=["user", "recommendation_type"],
                name="movies_reco_user_id_cb1fa0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="recommendationhistory",
            index=models.Index(
                fields=["created_at"], name="movies_reco_created_c809b1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="watchlist",
            unique_together={("user", "movie")},
        ),
    ]
